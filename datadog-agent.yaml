apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    agent.datadoghq.com/component: agent
    agent.datadoghq.com/name: datadog
    app.kubernetes.io/instance: agent
    app.kubernetes.io/managed-by: datadog-operator
    app.kubernetes.io/name: datadog-agent-deployment
    app.kubernetes.io/part-of: default-datadog
    app.kubernetes.io/version: ""
  name: datadog-agent
  namespace: default
  ownerReferences:
  - apiVersion: datadoghq.com/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: DatadogAgent
    name: datadog
    uid: 97b611d6-ae76-428f-b37f-8550c02e2a93
  resourceVersion: "5016"
  uid: 39854e72-7211-48e5-9c2a-b553f7155274
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      agent.datadoghq.com/component: agent
      agent.datadoghq.com/name: datadog
      app.kubernetes.io/instance: agent
      app.kubernetes.io/managed-by: datadog-operator
      app.kubernetes.io/name: datadog-agent-deployment
      app.kubernetes.io/part-of: default-datadog
      app.kubernetes.io/version: ""
  template:
    metadata:
      creationTimestamp: null
      generateName: datadog
      labels:
        agent.datadoghq.com/component: agent
        agent.datadoghq.com/name: datadog
        app.kubernetes.io/instance: agent
        app.kubernetes.io/managed-by: datadog-operator
        app.kubernetes.io/name: datadog-agent-deployment
        app.kubernetes.io/part-of: default-datadog
        app.kubernetes.io/version: ""
      namespace: default
    spec:
      containers:
      - command:
        - agent
        - run
        env:
        - name: DD_HEALTH_PORT
          value: "5555"
        - name: DD_COLLECT_KUBERNETES_EVENTS
          value: "false"
        - name: DD_LEADER_ELECTION
          value: "false"
        - name: DD_LOGS_ENABLED
          value: "false"
        - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
          value: "false"
        - name: DD_LOGS_CONFIG_K8S_CONTAINER_USE_FILE
          value: "false"
        - name: DD_LOG_LEVEL
          value: INFO
        - name: KUBERNETES
          value: "yes"
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              key: api-key
              name: datadog-secret
        - name: DD_DOGSTATSD_ORIGIN_DETECTION
          value: "false"
        - name: DD_DOGSTATSD_SOCKET
          value: /var/run/datadog/statsd/statsd.sock
        - name: DD_CLUSTER_AGENT_ENABLED
          value: "true"
        - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
          value: datadog-cluster-agent
        - name: DD_CLUSTER_AGENT_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              key: token
              name: datadog
        - name: DD_KUBELET_TLS_VERIFY
          value: "false"
        - name: KUBELET_TLS_VERIFY
          value: "false"
        image: gcr.io/datadoghq/agent:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /live
            port: 5555
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        name: agent
        ports:
        - containerPort: 8125
          name: dogstatsdport
          protocol: UDP
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /ready
            port: 5555
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 5
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/log/datadog
          name: logdatadog
        - mountPath: /etc/datadog-agent/auth
          name: datadog-agent-auth
        - mountPath: /etc/datadog-agent/install_info
          name: installinfo
          readOnly: true
          subPath: install_info
        - mountPath: /conf.d
          name: confd
          readOnly: true
        - mountPath: /checks.d
          name: checksd
          readOnly: true
        - mountPath: /host/proc
          name: procdir
          readOnly: true
        - mountPath: /host/sys/fs/cgroup
          name: cgroups
          readOnly: true
        - mountPath: /etc/datadog-agent
          name: config
        - mountPath: /host/var/run
          name: runtimesocketdir
          readOnly: true
        - mountPath: /var/run/datadog/statsd
          name: dsdsocket
      - command:
        - process-agent
        - --config=/etc/datadog-agent/datadog.yaml
        - --sysprobe-config=/etc/datadog-agent/system-probe.yaml
        env:
        - name: DD_SYSTEM_PROBE_ENABLED
          value: "false"
        - name: DD_DOGSTATSD_SOCKET
          value: /var/run/datadog/statsd/statsd.sock
        - name: DD_ORCHESTRATOR_EXPLORER_ENABLED
          value: "true"
        - name: DD_ORCHESTRATOR_EXPLORER_CONTAINER_SCRUBBING_ENABLED
          value: "true"
        - name: DD_CLUSTER_AGENT_ENABLED
          value: "true"
        - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
          value: datadog-cluster-agent
        - name: DD_CLUSTER_AGENT_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              key: token
              name: datadog
        - name: DD_LOG_LEVEL
          value: INFO
        - name: KUBERNETES
          value: "yes"
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              key: api-key
              name: datadog-secret
        image: gcr.io/datadoghq/agent:latest
        imagePullPolicy: IfNotPresent
        name: process-agent
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/log/datadog
          name: logdatadog
        - mountPath: /etc/datadog-agent/auth
          name: datadog-agent-auth
          readOnly: true
        - mountPath: /var/run/datadog/statsd
          name: dsdsocket
          readOnly: true
        - mountPath: /host/sys/fs/cgroup
          name: cgroups
          readOnly: true
        - mountPath: /host/proc
          name: procdir
          readOnly: true
        - mountPath: /etc/datadog-agent
          name: config
        - mountPath: /host/var/run
          name: runtimesocketdir
          readOnly: true
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - cp -vnr /etc/datadog-agent /opt
        command:
        - bash
        - -c
        image: gcr.io/datadoghq/agent:latest
        imagePullPolicy: IfNotPresent
        name: init-volume
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/datadog-agent
          name: config
      - args:
        - for script in $(find /etc/cont-init.d/ -type f -name '*.sh' | sort) ; do
          bash $script ; done
        command:
        - bash
        - -c
        env:
        - name: DD_HEALTH_PORT
          value: "5555"
        - name: DD_COLLECT_KUBERNETES_EVENTS
          value: "false"
        - name: DD_LEADER_ELECTION
          value: "false"
        - name: DD_LOGS_ENABLED
          value: "false"
        - name: DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL
          value: "false"
        - name: DD_LOGS_CONFIG_K8S_CONTAINER_USE_FILE
          value: "false"
        - name: DD_LOG_LEVEL
          value: INFO
        - name: KUBERNETES
          value: "yes"
        - name: DD_KUBERNETES_KUBELET_HOST
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: DD_API_KEY
          valueFrom:
            secretKeyRef:
              key: api-key
              name: datadog-secret
        - name: DD_DOGSTATSD_ORIGIN_DETECTION
          value: "false"
        - name: DD_DOGSTATSD_SOCKET
          value: /var/run/datadog/statsd/statsd.sock
        - name: DD_CLUSTER_AGENT_ENABLED
          value: "true"
        - name: DD_CLUSTER_AGENT_KUBERNETES_SERVICE_NAME
          value: datadog-cluster-agent
        - name: DD_CLUSTER_AGENT_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              key: token
              name: datadog
        image: gcr.io/datadoghq/agent:latest
        imagePullPolicy: IfNotPresent
        name: init-config
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/log/datadog
          name: logdatadog
        - mountPath: /etc/datadog-agent/auth
          name: datadog-agent-auth
        - mountPath: /etc/datadog-agent/install_info
          name: installinfo
          readOnly: true
          subPath: install_info
        - mountPath: /conf.d
          name: confd
          readOnly: true
        - mountPath: /checks.d
          name: checksd
          readOnly: true
        - mountPath: /host/proc
          name: procdir
          readOnly: true
        - mountPath: /host/sys/fs/cgroup
          name: cgroups
          readOnly: true
        - mountPath: /etc/datadog-agent
          name: config
        - mountPath: /host/var/run
          name: runtimesocketdir
          readOnly: true
        - mountPath: /var/run/datadog/statsd
          name: dsdsocket
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsUser: 0
      serviceAccount: datadog-agent
      serviceAccountName: datadog-agent
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: logdatadog
      - emptyDir: {}
        name: datadog-agent-auth
      - configMap:
          defaultMode: 420
          name: datadog-install-info
        name: installinfo
      - emptyDir: {}
        name: confd
      - emptyDir: {}
        name: checksd
      - emptyDir: {}
        name: config
      - hostPath:
          path: /proc
          type: ""
        name: procdir
      - hostPath:
          path: /sys/fs/cgroup
          type: ""
        name: cgroups
      - emptyDir: {}
        name: dsdsocket
      - hostPath:
          path: /var/run
          type: ""
        name: runtimesocketdir
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 10%
    type: RollingUpdate
